# -*- mode: sh -*-
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
# remember - paths live in .zshenv

# Machine Specific
[[ -s "${ZDOTDIR:-$HOME}/.machineconf" ]] && source "${ZDOTDIR:-$HOME}/.machineconf"
# Private
[[ -s "${ZDOTDIR:-$HOME}/.private" ]] && source "${ZDOTDIR:-$HOME}/.private"
# Python
[[ -s "${ZDOTDIR:-$HOME}/.pythonrc.py" ]] && export PYTHONSTARTUP="${ZDOTDIR:-$HOME}/.pythonrc.py"


unsetopt correct

# History
bindkey "^[[A" history-search-backward
bindkey "^[[B" history-search-forward
export HISTSIZE=100000

# git
alias g="git"
alias gs="git status --short"
alias e="emacsclient -t"
alias gp="git pull --ff-only"

# Maven
alias -g nt=" -Dmaven.test.skip=true"
alias -g md='MAVEN_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n $MAVEN_OPTS " '

mvnrun () {
  date
  echo mvn $@
  echo -ne "\e]1;mvn $@\a"
  eval time mvn $@
  echo mvn $@
  date
  echo -ne "\033]0;$PWD\007"
}

alias m='mvnrun install -DskipTests -P!prod'
alias mc="mvnrun clean install -DskipTests -P!prod"
alias mct="mvnrun clean install -P!prod"
alias mt="mvnrun install -P!prod"
alias mtr="mvnrun tomcat7:run -P!prod"
alias mctr="mvnrun clean tomcat7:run -P!prod"
alias mit="mvnrun integration-test -Pwebtests -P!prod"
alias mst="mvnrun integration-test -Pselenium,headless -P!prod"
alias mcd="mvnrun process-resources -Pcreate-db -P!prod"
alias mpr="mvnrun process-resources"
alias bdd="mvnrun jasmine:bdd -P!prod"
alias mvd="mvnrun dependency:tree"
alias mca="mvnrun clean assembly:assembly"

# Gradle
alias -g gd='GRADLE_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n $GRADLE_OPTS " '
alias gb='gradle build'
alias gcb='gradle clean build'
alias gas='gradle appRun'

# Project aliases
alias w="cd $HOME/work"
alias b="cd $HOME/work/fetch"
alias c="cd $HOME/work/fetch-admin"
alias gbw='cd $HOME/work/fetch/assets && (grunt build || true) && grunt watch'

alias pj="python -mjson.tool"
alias pjl="python -mjson.tool | less"

function upto() {
    local EXPRESSION="$1"
	  if [ -z "$EXPRESSION" ]; then
		    echo "A folder expression must be provided." >&2
		    return 1
	  fi
	  local CURRENT_FOLDER="$(pwd)"
	  local MATCHED_DIR=""
	  local MATCHING=true

	  while [ "$MATCHING" = true ]; do
		    if [[ "$CURRENT_FOLDER" =~ "$EXPRESSION" ]]; then
			      MATCHED_DIR="$CURRENT_FOLDER"
			      CURRENT_FOLDER="$(dirname $CURRENT_FOLDER)"
		    else
			      MATCHING=false
		    fi
	  done
	  if [ -n "$MATCHED_DIR" ]; then
		    cd $MATCHED_DIR
	  else
		    echo "No Match." >&2
		    return 1
	  fi
}
alias u=upto
